#============LICENSE_START========================================================
# ================================================================================
# Copyright (c) 2020 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================

apiVersion: apps/v1
kind: Deployment
metadata: {{- include "common.resourceMetadata" . | nindent 2 }}
spec:
  replicas: 1
  selector: {{- include "common.selectors" . | nindent 4 }}
  template:
    metadata: {{- include "common.templateMetadata" . | nindent 6 }}
    spec:
      containers:
        - name: {{ include "common.name" . }}
          image: "{{ include "common.repository" . }}/{{ .Values.image }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          ports: {{ include "common.containerPorts" . | nindent 12  }}
          {{- if eq .Values.liveness.enabled true }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.liveness.port }}
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          {{ end }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.readiness.port }}
            initialDelaySeconds: {{ .Values.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.readiness.periodSeconds }}
          resources: {{ include "common.resources" . | nindent 12 }}
          volumeMounts:
            - mountPath: /run/config
              name: adapter-config
            - mountPath: /run/certs
              name: adapter-certs
            - mountPath: /run/pass
              name: adapter-pass
        - name: {{ include "common.name" . }}-dind
          image: "{{ .Values.dindRepository }}/{{ .Values.dindImage }}"
          imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
          securityContext:
            privileged: true
          command:
            - "dockerd"
          args:
            - "--host=tcp://localhost:2375"
      volumes:
        - name: adapter-config
          configMap:
            name: {{ include "common.fullname" . }}-configmap
        - name: adapter-certs
          secret:
            secretName: {{ include "common.secret.getSecretName" (dict "global" . "uid" "certs") }}
        - name: adapter-pass
          secret:
             secretName: {{ include "common.secret.getSecretName" (dict "global" . "uid" "docker") }}
      imagePullSecrets:
        - name: "{{ include "common.namespace" . }}-docker-registry-key"
