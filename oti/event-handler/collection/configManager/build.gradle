apply from: '../../common/common.gradle'
apply plugin: 'maven'

println 'Build Started in Dir:platform/ConfigManager, Date:' + getDate()

archivesBaseName = 'configManager'



dependencies {
		  
  compile "com.att.vcc:logger:${com_att_vcc_logger_version}"  	
  compile "com.att.vcc:vcctask:${com_att_vcc_vcctask_version}"
  compile "com.att.vcc:utils-vcc:${com_att_vcc_utils_version}"	
  compile "com.fasterxml.jackson.core:jackson-core:${com_fasterxml_jackson_core_version}" 
  compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${com_fasterxml_jackson_core_version}"	
  compile "org.yaml:snakeyaml:${snakeyaml_version}"
  compile "org.apache.commons:commons-lang3:${apache_commons_lang3_version}"
  
//  compile "commons-configuration:commons-configuration:${commons_configuration_version}"
   
  deployerJars "org.apache.maven.wagon:wagon-http:${org_apache_maven_wagon_version}"
}

uploadArchives {
	repositories {
		mavenDeployer {
       		 configuration = configurations.deployerJars
             repository(url: "http://mavencentral.dev.att.com:8081/nexus/content/repositories/att-repository-snapshots") {
				authentication(userName: "$mavenUser", password: "$mavenPassword")
			}
			pom.version = "0.0.1-SNAPSHOT"
			pom.artifactId = "configManager"
			pom.groupId = "com.att.vcc"
       }
    }
}

task copy_jars(type: Copy) {
     fileMode 0755
     destinationDir = file('./target/lib/attMaven')
     from (configurations.compile.files) {
           //exclude 'log4j-slf4j-impl-2.3.jar', 'slf4j-log4j12-1.7.6.jar', 'log4j-1.2.17.jar'
           include '*.jar'         
     }
}


distributions {
	main {
		baseName = archivesBaseName
		contents {
			from (configurations.compile.files) {
				into ('lib/attMaven')
				exclude jar.archiveName
				include '*.jar'
				fileMode 0755
			}
			from ('target/lib') {
				into ('lib')
				include jar.archiveName
			}
			from ('src/main/bin') {
				into ('bin')
				fileMode 0755
			}
									
			from('src/main/config'){
				into ('config')
				fileMode 0755
				
			}
		}
	}
}



build.dependsOn copy_jars
compileJava.dependsOn clean

//distTar.dependsOn jar

//distZip.dependsOn jar
