#_________________________________________________________________________
#
# File Name	= vnodelist.properties
# Date		= 02/02/2016
# Purpose	= Resource config file for CTI VOIP vNodeList
#
# Updated	= 05/10/2017 for projects 296084,296118 and 294356
#
#_________________________________________________________________________

headerList=VNODELISTKEY,USERID,VALIDFROM,VALIDTO,UPDATEDBY,DELETEBY,SENDTOETL,NODE_NAME,NODELEVEL,PROV_STATUS,IN_MAINT,SERVICE,FUNC_CODE,NETWORK,SERVICE_TYPE,NODE_TYPE,NODE_SUB_TYPE,CLLI,REGION_ZONE,OAMP_IP_ADDR,TVSP_IP_ADDR,COL_NODE_NAME,COL_IP_ADDR,UUID,FQDN,VNF_PARENT,VS_PARENT,PS_PARENT,MATE_NODE,TENANT_ID,VNFC_FUNC_CODE,DKAT_SERVICE,DKAT_NODETYPE


# list of queries

getNodeInfoFromGenericVnf_ForServiceALL=select t1.vnf_id, t1.vnf_name, t2.service_id, t1.prov_status, t1.ipv4_oam_address, t1.regional_resource_zone, t1.in_maint,  t2.service_description, max(t1.resource_version), max(t2.resource_version) from dti.rt_generic_vnf t1,  dti.rt_service t2 where t1.service_id = t2.service_id and t2.service_description in ('HOSTED COMMUNICATIONS','VIRTUAL USP','FLEXREACH','FIRSTNET','BVOIP') group by t1.vnf_id, t1.vnf_name, t2.service_id, t1.prov_status, t1.ipv4_oam_address, t1.regional_resource_zone, t1.in_maint,  t2.service_description 


getNodeInfoFromGenericVnf_ForServiceHC=select t1.vnf_id, t1.vnf_name, t2.service_id, t1.prov_status, t1.ipv4_oam_address, t1.regional_resource_zone, t1.in_maint, t2.service_description, max(t1.resource_version), max(t2.resource_version) from dti.rt_generic_vnf t1,  dti.rt_service t2 where t1.service_id = t2.service_id and t2.service_description = 'HOSTED COMMUNICATIONS' group by t1.vnf_id, t1.vnf_name, t2.service_id, t1.prov_status, t1.ipv4_oam_address, t1.regional_resource_zone, t1.in_maint, t2.service_description


getNodeInfoFromGenericVnf_ForServiceVUSP=select t1.vnf_id, t1.vnf_name, t2.service_id, t1.prov_status, t1.ipv4_oam_address, t1.regional_resource_zone, t1.in_maint, t2.service_description, max(t1.resource_version), max(t2.resource_version) from dti.rt_generic_vnf t1,  dti.rt_service t2 where t1.service_id = t2.service_id and t2.service_description = 'VIRTUAL USP' group by t1.vnf_id, t1.vnf_name, t2.service_id, t1.prov_status, t1.ipv4_oam_address, t1.regional_resource_zone, t1.in_maint, t2.service_description 


# use view
getNodeInfoFromVserver_ForServiceALL=select t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description, max(t1.resource_version), max(t3.resource_version) from dti.rt_vserver t1, DTI.AAI_GENERIC_VNF_VSERVER_V t2, dti.rt_service t3 where t1.vserver_id = t2.vserver_id and t2.service_id = t3.service_id and t3.service_description in ('HOSTED COMMUNICATIONS','VIRTUAL USP','FLEXREACH','FIRSTNET','BVOIP') group by t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description union select t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description, max(t1.resource_version), max(t3.resource_version) from dti.rt_vserver t1, DTI.AAI_VSERVER_GENERIC_VNF_V t2, dti.rt_service t3 where t1.vserver_id = t2.vserver_id and t2.service_id = t3.service_id and t3.service_description in ('HOSTED COMMUNICATIONS','VIRTUAL USP','FLEXREACH','FIRSTNET','BVOIP') group by t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description 


# use view
getNodeInfoFromVserver_ForServiceHC=select t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description, max(t1.resource_version), max(t3.resource_version) from dti.rt_vserver t1, DTI.AAI_GENERIC_VNF_VSERVER_V t2, dti.rt_service t3 where t1.vserver_id = t2.vserver_id and t2.service_id = t3.service_id and t3.service_description = 'HOSTED COMMUNICATIONS' group by t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description union select t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description, max(t1.resource_version), max(t3.resource_version) from dti.rt_vserver t1, DTI.AAI_VSERVER_GENERIC_VNF_V t2, dti.rt_service t3 where t1.vserver_id = t2.vserver_id and t2.service_id = t3.service_id and t3.service_description = 'HOSTED COMMUNICATIONS' group by t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description 


# use view
getNodeInfoFromVserver_ForServiceVUSP=select t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description, max(t1.resource_version), max(t3.resource_version) from dti.rt_vserver t1, DTI.AAI_GENERIC_VNF_VSERVER_V t2, dti.rt_service t3 where t1.vserver_id = t2.vserver_id and t2.service_id = t3.service_id and t3.service_description = 'VIRTUAL USP' group by t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description union select t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description, max(t1.resource_version), max(t3.resource_version) from dti.rt_vserver t1, DTI.AAI_VSERVER_GENERIC_VNF_V t2, dti.rt_service t3 where t1.vserver_id = t2.vserver_id and t2.service_id = t3.service_id and t3.service_description = 'VIRTUAL USP' group by t2.vnf_name, t2.regional_resource_zone, t2.service_id, t1.vserver_id, t1.vserver_name, t1.prov_status, t1.in_maint, t1.tenant_id, t3.service_description 

getNodeInfoFromPserver=select hostname, fqdn, ipv4_oam_address, pserver_id, in_maint, prov_status, max(resource_version) from dti.rt_pserver group by hostname, fqdn, ipv4_oam_address, pserver_id, in_maint, prov_status

		       
getNodeInfoFromNetworkEleAttr=select neattrkey,service,func_code,node_type,node_sub_type,network,service_type,dkat_service,dkat_nodetype from DTI.NetworkElementAttributes where (VALIDTO='' or VALIDTO is null)
        		      

getVnfIdToPserverIdMap=select distinct from_node_id, to_node_id from dti.rt_relationship_list where related_from = 'generic-vnf' and related_to = 'pserver'

getServiceMap=select service_id, service_description, max(resource_version) from dti.rt_service group by service_id, service_description


# use view
getVnfIdToTenantIdMap=select distinct t1.vnf_id, t1.tenant_id from DTI.AAI_GENERIC_VNF_VSERVER_V t1, dti.rt_service t2 where t1.service_id = t2.service_id and t2.service_description in ('HOSTED COMMUNICATIONS','VIRTUAL USP','FLEXREACH','FIRSTNET','BVOIP') union select distinct t1.vnf_id, t1.tenant_id  from DTI.AAI_VSERVER_GENERIC_VNF_V t1, dti.rt_service t2 where t1.service_id = t2.service_id and t2.service_description in ('HOSTED COMMUNICATIONS','VIRTUAL USP','FLEXREACH','FIRSTNET','BVOIP') 


getPserverHostnameToPhysicalLocationIdMap=SELECT p.hostname, co.physical_location_id FROM dti.rt_pserver p INNER JOIN dti.rt_relationship_list r ON p.hostname = r.from_node_id AND r.related_from = 'pserver' INNER JOIN dti.rt_complex co ON co.physical_location_id = r.to_node_id AND r.related_to = 'complex' 

# 16.07 get node info from dti.rt_vnfc table
getNodeInfoFrom_RT_VNFC=select DISTINCT s1.vnf_name, s1.regional_resource_zone, s1.tenant_id, s3.service_description, s1.vserver_id, s1.vserver_name, s2.vnfc_name, s2.nfc_function, s2.prov_status, s2.in_maint, s2.ipaddress_v4_oam_vip from  DTI.AAI_GENERIC_VNF_VSERVER_V s1, dti.rt_vnfc s2, dti.rt_service s3, dti.networkelementattributes s4 where SUBSTR(s2.vnfc_name, 1, 13) = s1.vserver_name and SUBSTR(s2.vnfc_name, 1, 4) = s4.func_code and s3.service_id = s1.service_id  union select DISTINCT s1.vnf_name, s1.regional_resource_zone, s1.tenant_id, s3.service_description, s1.vserver_id, s1.vserver_name, s2.vnfc_name, s2.nfc_function, s2.prov_status, s2.in_maint, s2.ipaddress_v4_oam_vip from  DTI.AAI_VSERVER_GENERIC_VNF_V s1, dti.rt_vnfc s2, dti.rt_service s3, dti.networkelementattributes s4 where SUBSTR(s2.vnfc_name, 1, 13) = s1.vserver_name and SUBSTR(s2.vnfc_name, 1, 4) = s4.func_code and s3.service_id = s1.service_id 


# Using view
getNodeInfoFromVNFC=select distinct t1.vnf_name, t1.prov_status_vserver, t1.in_maint_vserver, t1.ipv4_oam_address, t1.regional_resource_zone, t1.tenant_id, t3.service_description, t1.vserver_id, t2.vm_name, t2.vnfc_name from DTI.AAI_GENERIC_VNF_VSERVER_V t1, (select distinct v.vserver_name as vm_name, v.vserver_name||vnfc_func_code||'001' as vnfc_name from dti.rt_vserver v, dti.vm_fc_vnfc_fc_map m where substr(v.vserver_name,1,4)=m.vm_func_code and (substr(v.vserver_name,11,13) ~ vm_sequence_number) order by 1,2) t2, dti.rt_service t3 where t1.vserver_name = t2.vm_name and t3.service_id = t1.service_id and t3.service_description in ('HOSTED COMMUNICATIONS','VIRTUAL USP','FLEXREACH','FIRSTNET','BVOIP')


getVserverIdToPserverHostnameMap=SELECT v.vserver_id, p.hostname FROM dti.rt_vserver v INNER JOIN dti.rt_relationship_list r ON CONCAT_WS('|', v.cloud_owner, v.cloud_region_id, v.tenant_id, v.vserver_id) = r.from_node_id AND r.related_from = 'vserver' INNER JOIN dti.rt_pserver p ON p.hostname = r.to_node_id AND r.related_to = 'pserver'


getVserverIdToPserverIdMap=SELECT v.vserver_id, p.pserver_id FROM dti.rt_vserver v INNER JOIN dti.rt_relationship_list r ON CONCAT_WS('|', v.cloud_owner, v.cloud_region_id, v.tenant_id, v.vserver_id) = r.from_node_id AND r.related_from = 'vserver' INNER JOIN dti.rt_pserver p ON p.hostname = r.to_node_id AND r.related_to = 'pserver'

getVserverIdToOAMP_IP_ADDR_Map=select distinct t2.parent_entity_id as vserver_id, ipv4address, t3.vserver_name,  network_name from dti.rt_l3interface_ipv4addresslist t1, (select interface_name, parent_entity_type, parent_entity_id, network_name from dti.rt_l_interface where parent_entity_type = 'vserver'  ) t2, dti.rt_vserver t3 where t1.parent_entity_id = t2.interface_name and t1.grandparent_entity_type = 'vserver' and t3.vserver_id = t2.parent_entity_id and t1.grandparent_entity_id = t3.vserver_id and network_name like '%OAM%' and substr(t3.vserver_name,length(t3.vserver_name) - 12, 4) not in('dbcx', 'dbdx', 'dbgx', 'dbrx', 'dbsx', 'dbux', 'dbzx', 'dbhx', 'dbkx', 'dbpx', 'dbqf', 'dbjf', 'dbkf', 'dbqx', 'dbjx' , 'dbax')  union select distinct t2.parent_entity_id as vserver_id, ipv4address, t3.vserver_name,  network_name from dti.rt_l3interface_ipv4addresslist t1, (select interface_name, parent_entity_type, parent_entity_id, network_name from dti.rt_l_interface where parent_entity_type = 'vserver' ) t2, dti.rt_vserver t3 where t1.parent_entity_id = t2.interface_name and t1.grandparent_entity_type = 'vserver' and t3.vserver_id = t2.parent_entity_id and t1.grandparent_entity_id = t3.vserver_id and network_name like '%OAM%'and interface_name like '%p1n001'and substr(t3.vserver_name,length(t3.vserver_name) - 12, 4) in('dbcx', 'dbdx', 'dbgx', 'dbrx', 'dbsx', 'dbux', 'dbzx', 'dbhx', 'dbkx', 'dbpx', 'dbqf', 'dbjf', 'dbkf', 'dbqx', 'dbjx' , 'dbax')

getVserverIdToTVSP_IP_ADDR_Map=select t2.parent_entity_id, ipv4address from dti.rt_l3interface_ipv4addresslist t1, (select interface_name, parent_entity_type, parent_entity_id from dti.rt_l_interface where network_name like '%SIP%' and parent_entity_type = 'vserver' ) t2 where t1.parent_entity_id = t2.interface_name and t1.grandparent_entity_type = 'vserver'


#getCollectionNodeInfoFromVoipNodesForVNI=select distinct node_name, ipv4_address, network, node_sub_type, service_type, node_type from voipnodes where NETWORK = 'VNI' and valid_to is null and active = 'Y' and NODE_TYPE like 'ERC%' and service_type= 'HC' and NODE_SUB_TYPE='EMS' 

#getCollectionNodeInfoFromVDevicesForUVP=select ptnii_name, OAM_IPV4 from vdevices where validto = '99991231235959' and OAM_IPV4 is not null


# to include new VM
getVMNodesByFuncCode=select distinct s3.vnf_name, s3.regional_resource_zone, s4.service_id, s1.vserver_id, s1.vserver_name, s1.prov_status, s1.in_maint, s1.tenant_id, s1.RESOURCE_VERSION from  dti.rt_vserver s1, dti.networkelementattributes s2, DTI.AAI_GENERIC_VNF_VSERVER_V s3, dti.rt_service s4 where SUBSTR(s1.vserver_name, 1, 4) = s2.func_code and s1.vserver_id = s3.vserver_id and s3.service_id = s4.service_id and vnf_name is not null order by s1.RESOURCE_VERSION


# to include new VNFC
getVNFCNodesByFuncCode=select DISTINCT s1.vnf_name, s1.prov_status_vserver, s1.in_maint_vserver, s1.ipv4_oam_address, s1.regional_resource_zone, s1.tenant_id, s3.service_description, s1.vserver_id, s2.vm_name, s2.vnfc_name from  DTI.AAI_VSERVER_GENERIC_VNF_V s1, dti.vm_vnfc_map s2, dti.rt_service s3, dti.networkelementattributes s4 where SUBSTR(s2.vnfc_name, 1, 4) = s4.func_code and s1.vserver_name = s2.vm_name and s3.service_id = s1.service_id


getNodeInfoFrom_VM_FC_VNFC_FC_MAP=select distinct t1.vnf_name, t1.prov_status_vserver, t1.in_maint_vserver, t1.ipv4_oam_address, t1.regional_resource_zone, t1.tenant_id, t3.service_description, t1.vserver_id, t2.vm_name, t2.vnfc_name from DTI.AAI_GENERIC_VNF_VSERVER_V t1, (select DISTINCT v.vserver_name as vm_name, v.vserver_name||vnfc_func_code||'001' as vnfc_name from dti.rt_vserver v, dti.vm_fc_vnfc_fc_map m where substr(v.vserver_name,1,4)=m.vm_func_code  and (substr(v.vserver_name,11,13) ~ vm_sequence_number) order by 1,2) t2, dti.rt_service t3 where t1.vserver_name = t2.vm_name and t3.service_id = t1.service_id and t3.service_description in ('HOSTED COMMUNICATIONS','VIRTUAL USP','FLEXREACH','FIRSTNET','BVOIP')


# Backup - If vNodeMap is empty due to network problem, then sends all active records in DB instead 
getAllValidRecords=select node_name,nodelevel,prov_status,in_maint,service,func_code,network,service_type,node_type,node_sub_type,clli,region_zone,oamp_ip_addr,tvsp_ip_addr,col_node_name,col_ip_addr,uuid,fqdn,vnf_parent,vs_parent,ps_parent,mate_node,tenant_id,vnfc_func_code,dkat_service,dkat_nodetype from dti.vnodelist where (VALIDTO='' or VALIDTO is null)


# DTI - to publish all active records to DMaap
publishAllActiveRecords=select VALIDFROM, VALIDTO, USERID, NODE_NAME, NODELEVEL, PROV_STATUS, IN_MAINT, SERVICE, FUNC_CODE, NETWORK, SERVICE_TYPE, NODE_TYPE, NODE_SUB_TYPE, CLLI, REGION_ZONE, OAMP_IP_ADDR, TVSP_IP_ADDR, COL_NODE_NAME, COL_IP_ADDR, UUID, FQDN, VNF_PARENT, VS_PARENT, PS_PARENT, MATE_NODE, TENANT_ID, DKAT_SERVICE, DKAT_NODETYPE from DTI.VNODELIST where (VALIDTO='' or VALIDTO is null) order by NODE_NAME,VALIDFROM,SERVICE,NETWORK,NODE_TYPE,NODE_SUB_TYPE,SERVICE_TYPE

# DTI - to publish all active records to DMaap for VETL
publishAllActiveRecordsVetl=select VALIDFROM, COALESCE(validto,''), USERID, NODE_NAME, NODELEVEL, PROV_STATUS, IN_MAINT, SERVICE, FUNC_CODE, NETWORK, SERVICE_TYPE, NODE_TYPE, NODE_SUB_TYPE, CLLI, REGION_ZONE, OAMP_IP_ADDR, TVSP_IP_ADDR, COL_NODE_NAME, COL_IP_ADDR, UUID, FQDN, VNF_PARENT, VS_PARENT, PS_PARENT, MATE_NODE, TENANT_ID, VNFC_FUNC_CODE, DKAT_SERVICE, DKAT_NODETYPE from DTI.VNODELIST where (VALIDTO='' or VALIDTO is null) order by NODE_NAME,VALIDFROM,SERVICE,NETWORK,NODE_TYPE,NODE_SUB_TYPE,SERVICE_TYPE

# To publish the snapshot of DeviceInterfaceMapping to VEC
publishDeviceInterfaceMapping=Y

# publish vNodeListAlertInventory into new topic VOIP_NETWORK_ALERT_INVENTORY in 16.05
publish_vNodeListAlertInventory=Y

                                                                                      
                                                                                     
