\echo executing "CREATE TABLE IF NOT EXISTS dti.narad_pnf_new"

CREATE TABLE IF NOT EXISTS dti.narad_pnf_new
(
	PNF_NAME                  		VARCHAR(40)  	NOT NULL PRIMARY KEY,
    PNF_NAME2                 		VARCHAR(40)  	NULL,
    PNF_NAME2_SOURCE           		VARCHAR(50)  	NULL,
    PNF_ID                     		VARCHAR(150) 	NULL,
    NF_NAMING_CODE			   		VARCHAR(50)  	NULL,
    NETWORK_OPERATING_SYSTEM		VARCHAR(50)		NULL,
    EQUIP_TYPE                 		VARCHAR(40)  	NULL,
    EQUIP_VENDOR               		VARCHAR(40)  	NULL,
    EQUIP_MODEL                		VARCHAR(250) 	NULL,
    MANAGEMENT_OPTION          		VARCHAR(20)  	NULL,
    IPADDRESS_V4_OAM           		VARCHAR(20)  	NULL,
    SW_VERSION                 		VARCHAR(25)  	NULL,
    IN_MAINT                   		VARCHAR(1)   	NOT NULL,
    FRAME_ID                   		VARCHAR(100) 	NULL,
    SERIAL_NUMBER              		VARCHAR(100) 	NULL,
    IPADDRESS_V4_LOOPBACK_0    		VARCHAR(20)  	NULL,
    IPADDRESS_V6_LOOPBACK_0    		VARCHAR(45)  	NULL,
    IPADDRESS_V4_AIM           		VARCHAR(20)  	NULL,
    IPADDRESS_V6_AIM           		VARCHAR(45)  	NULL,
    IPADDRESS_V6_OAM           		VARCHAR(45)  	NULL,
    INV_STATUS                 		VARCHAR(20)  	NULL,
    RESOURCE_VERSION           		VARCHAR(25)  	NULL,
    PROV_STATUS                		VARCHAR(10)  	NULL,
    OPS_NOTE						VARCHAR(1000)	NULL,
	CONFIG_VALIDATION_REQUEST_ID	VARCHAR(100)	NULL,
	CONFIG_VALIDATION_STATUS		VARCHAR(50)	NULL,
    NF_ROLE                    		VARCHAR(50)  NULL,
    SELFLINK                   		VARCHAR(4000)  NULL,
    NF_TYPE                    		VARCHAR(50)  NULL,
    NF_FUNCTION                		VARCHAR(100)  NULL,
    UPDATED_ON                 		VARCHAR(20)
);

\echo executing "INSERT INTO dti.narad_pnf_new  from dti.narad_pnf"

INSERT INTO dti.narad_pnf_new 
(
    PNF_NAME,
    PNF_NAME2,
    PNF_NAME2_SOURCE,
    PNF_ID ,
    EQUIP_TYPE,
    EQUIP_VENDOR,
    EQUIP_MODEL,
    MANAGEMENT_OPTION,
    IPADDRESS_V4_OAM,
    SW_VERSION,
    IN_MAINT,
    FRAME_ID,
    SERIAL_NUMBER,
    IPADDRESS_V4_LOOPBACK_0,
    IPADDRESS_V6_LOOPBACK_0,
    IPADDRESS_V4_AIM,
    IPADDRESS_V6_AIM,
    IPADDRESS_V6_OAM,
    INV_STATUS,
    RESOURCE_VERSION,
    PROV_STATUS,
    NF_ROLE,
    SELFLINK,
    NF_TYPE,
    NF_FUNCTION,
    UPDATED_ON
) SELECT 
    PNF_NAME,
    PNF_NAME2,
    PNF_NAME2_SOURCE,
    PNF_ID ,
    EQUIP_TYPE,
    EQUIP_VENDOR,
    EQUIP_MODEL,
    MANAGEMENT_OPTION,
    IPADDRESS_V4_OAM,
    SW_VERSION,
    IN_MAINT,
    FRAME_ID,
    SERIAL_NUMBER,
    IPADDRESS_V4_LOOPBACK_0,
    IPADDRESS_V6_LOOPBACK_0,
    IPADDRESS_V4_AIM,
    IPADDRESS_V6_AIM,
    IPADDRESS_V6_OAM,
    INV_STATUS,
    RESOURCE_VERSION,
    PROV_STATUS,
    NF_ROLE,
    SELFLINK,
    NF_TYPE,
    NF_FUNCTION,
    UPDATED_ON
	FROM dti.narad_pnf ;

\echo executing "DROP TABLE dti.narad_pnf CASCADE;"
DROP TABLE  dti.narad_pnf CASCADE;

ALTER TABLE dti.narad_pnf_new RENAME TO narad_pnf;

\echo "create the view dti.v_narad_chassis_pnf which got dropped from CASCADE" 
CREATE OR REPLACE VIEW dti.v_narad_chassis_pnf AS SELECT c.*, p.pnf_name FROM dti.narad_chassis c LEFT JOIN dti.narad_relationship_list rl ON c.chassis_name = rl.from_node_id AND rl.related_from = 'chassis' AND rl.related_to = 'pnf' LEFT JOIN dti.narad_pnf p ON p.pnf_name = rl.to_node_id AND rl.related_to = 'pnf';


\echo "drop the constrait for the primary key of narad_p_interface"
ALTER TABLE dti.narad_p_interface drop CONSTRAINT IF EXISTS NARAD_P_INTERFACE_NEWPK;

\echo "executing CREATE TABLE IF NOT EXISTS dti.narad p-interface_new"
CREATE TABLE IF NOT EXISTS dti.narad_p_interface_new
(
	INTERFACE_NAME			VARCHAR(50)		NOT NULL,
	INTERFACE_NAME2			VARCHAR(50)		NULL,
	SPEED_VALUE				NUMERIC(18,0)	NULL,
	SPEED_UNITS				VARCHAR(10)		NULL,
	PORT_DESCRIPTION		VARCHAR(100)	NULL,
	EQUIPMENT_IDENTIFIER	VARCHAR(100)	NULL,
	INTERFACE_ROLE			VARCHAR(100)	NULL,
	INTERFACE_TYPE			VARCHAR(100)	NULL,
	PROV_STATUS				VARCHAR(10)		NULL,
	RESOURCE_VERSION		VARCHAR(25)		NULL,
	IN_MAINT				VARCHAR(1)		NOT NULL,
	INV_STATUS				VARCHAR(20)		NULL,
	OPS_NOTE				VARCHAR(1000)	NULL,
	INTERFACE_FUNCTION		VARCHAR(100)	NULL,
	MACADDR					VARCHAR(50)		NULL,
	PARENT_ENTITY_ID		VARCHAR(40)		NOT NULL,
	PARENT_ENTITY_TYPE		VARCHAR(100)	NOT NULL,
	SELFLINK				VARCHAR(4000)	NULL,
	UPDATED_ON				VARCHAR(20),
	CONSTRAINT NARAD_P_INTERFACE_NEWPK PRIMARY KEY(INTERFACE_NAME, PARENT_ENTITY_ID, PARENT_ENTITY_TYPE)
);

\echo executing "INSERT INTO dti.narad_p_interface_new"
INSERT INTO dti.narad_p_interface_new 
(
	INTERFACE_NAME,
	SPEED_VALUE,
	SPEED_UNITS,
	PORT_DESCRIPTION,
	EQUIPMENT_IDENTIFIER,
	INTERFACE_ROLE,
	INTERFACE_TYPE,
	PROV_STATUS,
	RESOURCE_VERSION,
	IN_MAINT,
	INV_STATUS,
	PARENT_ENTITY_ID,
	PARENT_ENTITY_TYPE,
	SELFLINK,
	UPDATED_ON
) SELECT 
	INTERFACE_NAME,
	SPEED_VALUE,
	SPEED_UNITS,
	PORT_DESCRIPTION,
	EQUIPMENT_IDENTIFIER,
	INTERFACE_ROLE,
	INTERFACE_TYPE,
	PROV_STATUS,
	RESOURCE_VERSION,
	IN_MAINT,
	INV_STATUS,
	PARENT_ENTITY_ID,
	PARENT_ENTITY_TYPE,
	SELFLINK,
	UPDATED_ON
	FROM dti.narad_p_interface;

\echo executing "DROP TABLE dti.narad_p_interface"
DROP TABLE  dti.narad_p_interface;

ALTER TABLE dti.narad_p_interface_new RENAME TO narad_p_interface;

\echo "executing CREATE TABLE IF NOT EXISTS dti.narad_p_server_new"

CREATE TABLE IF NOT EXISTS dti.narad_pserver_new
(
	HOSTNAME				VARCHAR(50)			NOT NULL PRIMARY KEY,
	PTNII_EQUIP_NAME		VARCHAR(80)			NULL,
	NUMBER_OF_CPUS			DOUBLE PRECISION	NULL,
	DISK_IN_GIGABYTES		DOUBLE PRECISION	NULL,
	RAM_IN_MEGABYTES		DOUBLE PRECISION	NULL,
	EQUIP_TYPE				VARCHAR(40)			NULL,
	EQUIP_VENDOR			VARCHAR(40)			NULL,
	EQUIP_MODEL				VARCHAR(500)		NULL,
	FQDN					VARCHAR(100)		NULL,
	PSERVER_SELFLINK		VARCHAR(4000)		NULL,
	IPV4_OAM_ADDRESS		VARCHAR(20)			NULL,
	SERIAL_NUMBER			VARCHAR(100)		NULL,
	IPADDRESS_V4_LOOPBACK_0	VARCHAR(20)			NULL,
	IPADDRESS_V6_LOOPBACK_0	VARCHAR(45)			NULL,
	IPADDRESS_V4_AIM		VARCHAR(20)			NULL,
	IPADDRESS_V6_AIM		VARCHAR(45)			NULL,
	IPADDRESS_V6_OAM		VARCHAR(45)			NULL,
	INV_STATUS				VARCHAR(20)			NULL,
	PSERVER_ID				VARCHAR(150)		NULL,
	IN_MAINT				VARCHAR(1)			NULL,
	INTERNET_TOPOLOGY		VARCHAR(100)		NULL,
	RESOURCE_VERSION		VARCHAR(25)			NULL,
	PSERVER_NAME2			VARCHAR(256)		NULL,
	PURPOSE					VARCHAR(150)		NULL,
	PROV_STATUS				VARCHAR(10)			NULL,
	MANAGEMENT_OPTION		VARCHAR(20)			NULL,
	HOST_PROFILE			VARCHAR(100)		NULL,
	ROLE					VARCHAR(50)			NULL,
	FUNCTION				VARCHAR(50)			NULL,
	OPS_NOTE				VARCHAR(1000)		NULL,
	UPDATED_ON				VARCHAR(20)

);

 \echo executing "INSERT INTO dti.narad_pserver_new"
INSERT INTO dti.narad_pserver_new 
(
	HOSTNAME,
	PTNII_EQUIP_NAME,
	NUMBER_OF_CPUS,
	DISK_IN_GIGABYTES,
	RAM_IN_MEGABYTES,
	EQUIP_TYPE,
	EQUIP_VENDOR,
	EQUIP_MODEL,
	FQDN,
	PSERVER_SELFLINK,
	IPV4_OAM_ADDRESS,
	SERIAL_NUMBER,
	IPADDRESS_V4_LOOPBACK_0,
	IPADDRESS_V6_LOOPBACK_0,
	IPADDRESS_V4_AIM,
	IPADDRESS_V6_AIM,
	IPADDRESS_V6_OAM,
	INV_STATUS,
	PSERVER_ID,
	IN_MAINT,
	INTERNET_TOPOLOGY,
	RESOURCE_VERSION,
	PSERVER_NAME2,
	PURPOSE,
	PROV_STATUS,
	MANAGEMENT_OPTION,
	HOST_PROFILE,
	UPDATED_ON
) SELECT
	HOSTNAME,
	PTNII_EQUIP_NAME,
	NUMBER_OF_CPUS,
	DISK_IN_GIGABYTES,
	RAM_IN_MEGABYTES,
	EQUIP_TYPE,
	EQUIP_VENDOR,
	EQUIP_MODEL,
	FQDN,
	PSERVER_SELFLINK,
	IPV4_OAM_ADDRESS,
	SERIAL_NUMBER,
	IPADDRESS_V4_LOOPBACK_0,
	IPADDRESS_V6_LOOPBACK_0,
	IPADDRESS_V4_AIM,
	IPADDRESS_V6_AIM,
	IPADDRESS_V6_OAM,
	INV_STATUS,
	PSERVER_ID,
	IN_MAINT,
	INTERNET_TOPOLOGY,
	RESOURCE_VERSION,
	PSERVER_NAME2,
	PURPOSE,
	PROV_STATUS,
	MANAGEMENT_OPTION,
	HOST_PROFILE,
	UPDATED_ON
	FROM dti.narad_pserver;

\echo executing "DROP TABLE dti.narad_pserver"	
DROP TABLE dti.narad_pserver CASCADE;
ALTER TABLE dti.narad_pserver_new RENAME TO narad_pserver;

\echo recreate view dti.v_narad_chassis_pserver that was dropped from CASCADE
CREATE OR REPLACE VIEW dti.v_narad_chassis_pserver AS SELECT c.*, p.hostname FROM dti.narad_chassis c LEFT JOIN dti.narad_relationship_list rl ON c.chassis_name = rl.from_node_id AND rl.related_from = 'chassis' AND rl.related_to = 'pserver' LEFT JOIN dti.narad_pserver p ON p.hostname = rl.to_node_id AND rl.related_to = 'pserver';

\echo "executing CREATE TABLE IF NOT EXISTS dti.rt_pnf_new"

CREATE TABLE IF NOT EXISTS dti.rt_pnf_new
(
	PNF_NAME					VARCHAR(40)		NOT NULL PRIMARY KEY,
	PNF_NAME2					VARCHAR(40)		NULL,
	PNF_NAME2_SOURCE			VARCHAR(50)		NULL,
	PNF_ID						VARCHAR(150)	NULL,
	NF_NAMING_CODE				VARCHAR(50)		NULL,
	EQUIP_TYPE					VARCHAR(40)		NULL,
	EQUIP_VENDOR				VARCHAR(40)		NULL,
	EQUIP_MODEL					VARCHAR(250)	NULL,
	MANAGEMENT_OPTION			VARCHAR(20)		NULL,
	ORCHESTRATION_STATUS		VARCHAR(50)		NULL,
	IPADDRESS_V4_OAM			VARCHAR(20)		NULL,
	SW_VERSION					VARCHAR(25)		NULL,
	IN_MAINT					VARCHAR(1)		NOT NULL,
	FRAME_ID					VARCHAR(100)	NULL,
	SERIAL_NUMBER				VARCHAR(100)	NULL,
	IPADDRESS_V4_LOOPBACK_0		VARCHAR(20)		NULL,
	IPADDRESS_V6_LOOPBACK_0		VARCHAR(45)		NULL,
	IPADDRESS_V4_AIM			VARCHAR(20)		NULL,
	IPADDRESS_V6_AIM			VARCHAR(45)		NULL,
	IPADDRESS_V6_OAM			VARCHAR(45)		NULL,
	INV_STATUS					VARCHAR(20)		NULL,
	RESOURCE_VERSION			VARCHAR(25)		NULL,
	PROV_STATUS					VARCHAR(10)		NULL,
	NF_ROLE						VARCHAR(50)		NULL,
	SELFLINK					VARCHAR(4000)	NULL,
	UPDATED_ON					VARCHAR(20)
);
\echo executing "INSERT INTO dti.rt_pnf_new"

INSERT INTO dti.rt_pnf_new
(
	PNF_NAME,
	PNF_NAME2,
	PNF_NAME2_SOURCE,
	PNF_ID,
	EQUIP_TYPE,
	EQUIP_VENDOR,
	EQUIP_MODEL,
	MANAGEMENT_OPTION,
	IPADDRESS_V4_OAM,
	SW_VERSION,
	IN_MAINT,
	FRAME_ID,
	SERIAL_NUMBER,
	IPADDRESS_V4_LOOPBACK_0,
	IPADDRESS_V6_LOOPBACK_0,
	IPADDRESS_V4_AIM,
	IPADDRESS_V6_AIM,
	IPADDRESS_V6_OAM,
	INV_STATUS,
	RESOURCE_VERSION,
	PROV_STATUS,
	NF_ROLE,
	SELFLINK,
	UPDATED_ON

) SELECT
	PNF_NAME,
	PNF_NAME2,
	PNF_NAME2_SOURCE,
	PNF_ID,
	EQUIP_TYPE,
	EQUIP_VENDOR,
	EQUIP_MODEL,
	MANAGEMENT_OPTION,
	IPADDRESS_V4_OAM,
	SW_VERSION,
	IN_MAINT,
	FRAME_ID,
	SERIAL_NUMBER,
	IPADDRESS_V4_LOOPBACK_0,
	IPADDRESS_V6_LOOPBACK_0,
	IPADDRESS_V4_AIM,
	IPADDRESS_V6_AIM,
	IPADDRESS_V6_OAM,
	INV_STATUS,
	RESOURCE_VERSION,
	PROV_STATUS,
	NF_ROLE,
	SELFLINK,
	UPDATED_ON
	FROM dti.rt_pnf;
	
\echo executing "DROP TABLE dti.rt_pnf"
DROP TABLE dti.rt_pnf CASCADE;

ALTER TABLE dti.rt_pnf_new RENAME TO rt_pnf;

\echo recreate view dti.aai_pnf_v that was dropped due to CASCADE
CREATE OR REPLACE VIEW dti.aai_pnf_v AS 
 SELECT 
 pnf_name,
 pnf_name2,
 pnf_name2_source,
 pnf_id,
 nf_naming_code,
 equip_type,
 equip_vendor,
 equip_model,
 management_option,
 orchestration_status,
 ipaddress_v4_oam,
 sw_version,
 in_maint,
 frame_id,
 serial_number,
 ipaddress_v4_loopback_0,
 ipaddress_v6_loopback_0,
 ipaddress_v4_aim,
 ipaddress_v6_aim,
 ipaddress_v6_oam,
 inv_status,
 resource_version,
 prov_status,
 nf_role
FROM dti.rt_pnf;

\echo "drop the constraint for the primary key of rt_p_interface"
ALTER TABLE dti.rt_p_interface drop CONSTRAINT IF EXISTS RT_P_INTERFACE_NEWPK;

\echo "executing CREATING IF NOT EXISTS dti.rt_p_interface_new"

CREATE TABLE IF NOT EXISTS dti.rt_p_interface_new
(
	INTERFACE_NAME			VARCHAR(50)		NOT NULL,
	INTERFACE_NAME2			VARCHAR(50)		NULL,
	SPEED_VALUE				NUMERIC(18,0)	NULL,
	SPEED_UNITS				VARCHAR(10)		NULL,
	PORT_DESCRIPTION		VARCHAR(100)	NULL,
	EQUIPMENT_IDENTIFIER	VARCHAR(100)	NULL,
	INTERFACE_ROLE			VARCHAR(100)	NULL,
	INTERFACE_TYPE			VARCHAR(100)	NULL,
	PROV_STATUS				VARCHAR(10)		NULL,
	RESOURCE_VERSION		VARCHAR(25)		NULL,
	IN_MAINT				VARCHAR(1)		NOT NULL,
	INV_STATUS				VARCHAR(20)		NULL,
	PARENT_ENTITY_ID		VARCHAR(100)	NOT NULL,
	PARENT_ENTITY_TYPE		VARCHAR(100)	NOT NULL,
	SELFLINK				VARCHAR(4000)	NULL,
	UPDATED_ON				VARCHAR(20),
	CONSTRAINT RT_P_INTERFACE_NEWPK PRIMARY KEY(INTERFACE_NAME, PARENT_ENTITY_ID, PARENT_ENTITY_TYPE)
);

\echo executing "INSERT INTO dti.rt_p_interface_new"
INSERT INTO dti.rt_p_interface_new
(
	INTERFACE_NAME,
	SPEED_VALUE,
	SPEED_UNITS,
	PORT_DESCRIPTION,
	RESOURCE_VERSION,
	EQUIPMENT_IDENTIFIER,
	INTERFACE_ROLE,
	INTERFACE_TYPE,
	PROV_STATUS,
	IN_MAINT,
	INV_STATUS,
	PARENT_ENTITY_ID,
	PARENT_ENTITY_TYPE,
	SELFLINK,
	UPDATED_ON

) SELECT
	INTERFACE_NAME,
	SPEED_VALUE,
	SPEED_UNITS,
	PORT_DESCRIPTION,
	RESOURCE_VERSION,
	EQUIPMENT_IDENTIFIER,
	INTERFACE_ROLE,
	INTERFACE_TYPE,
	PROV_STATUS,
	IN_MAINT,
	INV_STATUS,
	PARENT_ENTITY_ID,
	PARENT_ENTITY_TYPE,
	SELFLINK,
	UPDATED_ON
	FROM dti.rt_p_interface;

\echo "DROP dti.rt_p_interface"
DROP TABLE dti.rt_p_interface;

ALTER TABLE dti.rt_p_interface_new RENAME TO rt_p_interface;