apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'distribution'

apply plugin: 'jacoco'


def getDate() {
        def now = new Date()
        return now
}

ext {
	getDate = this.&getDate

	com_att_vcc_logger_version = "0.0.1-SNAPSHOT"	// com.att.vcc:logger:0.0.1-SNAPSHOT
	com_att_vcc_utils_version = "0.0.1-SNAPSHOT"	// com.att.vcc:utils-vcc:0.0.1-SNAPSHOT
	com_att_vcc_pecaudit_version = "0.0.1-SNAPSHOT"	// com.att.vcc:pecAudit:0.0.1-SNAPSHOT
	com_att_vcc_utils_vec_version = "0.0.1-SNAPSHOT"	// com.att.vcc:utils-vec:0.0.1-SNAPSHOT
	com_att_vcc_vcctask_version = "0.0.2-SNAPSHOT"	// com.att.vcc:vcctask:0.0.2-SNAPSHOT
	com_att_lpp_nwcodec_utility_version = "1.0.5"  // com.att.lpp.nwcodec:utility:1.0.5
	
	com_att_ecomp_operation_utils_version = "0.0.3-SNAPSHOT"	// com.att.ecomp.operation:operation-utils:0.0.3-SNAPSHOT
	javax_json_api_version = "1.0"					// javax.json:javax.json-api:1.0
	org_glassfish_javax_json_version = "1.0.4"		// org.glassfish:javax.json:1.0.4
	com_mikesamuel_json_sanitizer_version = "1.0"	// com.mikesamuel:json-sanitizer:[1.0,)
	com_fasterxml_jackson_core_version = "2.6.0"	// com.fasterxml.jackson.core:jackson-annotations:2.6.0
	//org_springframework_version = "3.2.0.RELEASE"	// org.springframework:spring-beans:3.2.0.RELEASE
	org_springframework_version = "4.2.2.RELEASE"	// org.springframework:spring-beans:3.2.0.RELEASE
	org_jdom_version = "2.0.2"						// org.jdom:jdom:2.0.2
	org_jdom2_version = "2.0.6"						// org.jdom:jdom2:2.0.6
	com_att_dcae_dmaap_api_version = "0.0.1-SNAPSHOT"		// com.att.dcae:common-dmaap-api:0.0.1-SNAPSHOT
	org_snmp4j_version = "1.10.1"					// org.snmp4j:snmp4j:1.10.1
	//org_snmp4j_version = "2.5.5"
	commons_lang_version = "2.6"					// common-lang:commons-lang:2.6
	javax_validation_version = "1.1.0.CR2"			// javax.validation:validation-api:1.1.0.CR2
	com_oracle_ojdbc6_version = "11.2.0.3"          // com.oracle:ojdbc6:11.2.0.3
	commons_codec_version = "1.11"                  // commons-codec:commons-codec:1.11 
	
    org_apache_httpcomponents_version = "4.5.5"     // org.apache.httpcomponents:httpclient:4.5.5
                                                    // org.apache.httpcomponents:httpmime:4.5.5
                                                    
    org_glassfish_jersey_core_version = "2.27"      // org.glassfish.jersey.core:jersey-common:2.27
                                                    // org.glassfish.jersey.containers:jersey-container-servlet:2.27                        
                                                    // org.glassfish.jersey.core:jersey-server:2.27
                                                    // org.glassfish.jersey.core:jersey-client:2.27
                                                    // org.glassfish.jersey.media:jersey-media-multipart:2.27
                                                  
    org_glassfish_jersey_jetty_verion = "9.4.9.v20180320" // org.eclipse.jetty:jetty-servlet:9.4.9.v20180320
                                                          // org.eclipse.jetty:jetty-server:9.4.9.v20180320
    
	com_oss_asn1_version = "6.2.0"
	net_sf_jopt_simple_version = "4.9"
	com_googlecode_json_simple_version = "1.1.1"
	org_json_version = "20140107"
	org_apache_camel_version = "2.15.3"
	org_apache_commons_version = "3.0"
	org_apache_commons_io_version = "2.5"
	commons_collections_version = "3.2.1"
	commons_beanutils_version = "1.8.3"
	junit_version = "4.11"
	org_easymock_version = "3.4"
	com_jcraft_version = "1.1.3"
	org_mockito_version = "1.9.5"
	
		//jsonschema2pojo begin
	org_jsonschema2pojo_version = '0.4.3'
	joda_time_version = '2.2'	
	//jsonschema2pojo end
	
	//foi begin
	jline_version = '2.14.2'
	org_apache_maven_wagon_version = '2.2'	
	
	org_apache_cxf_version = '3.1.6'
	
	com_googlecode_json_simple_version = '1.1.1'
	com_google_code_gson_version = '1.7.1'	
	//foi end

	//cli begin
	commons_net_version = "1.2.2"					// commons-net-1.2.2.jar
	//	jsch_version = "0.1.42"					// jsch-0.1.42.jar
		jsch_version = "0.1.53"					// jsch-0.1.53.jar
	//cli end
	
	// commons-configuration
	commons_configuration_version = "1.10" 	// commons-configuration:commons-configuration:1.10	
	
	snakeyaml_version = "1.15"
	apache_commons_lang3_version = "3.5"	// org.apache.commons:commons-lang3
}
	
defaultTasks 'build'

compileJava {
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
}

configurations {
        deployerJars
}

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
   	flatDir { dirs '../../../infrastructure/packages/licensed/asn1/com/oss/asn1/oss/6.2.0' }
    
	maven { 
		credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
        //url 'http://mavencentral.it.att.com:8081/nexus/repository/maven-central/'  
        url 'http://mavencentral.it.att.com:8081/nexus/repository/central/'
    }
	maven { 
		credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
        url 'http://mavencentral.it.att.com:8081/nexus/repository/att-repository-releases' 
    }
	maven { 
   		credentials {
			username "$mavenUser"
			password "$mavenPassword"
		}
        url 'http://mavencentral.it.att.com:8081/nexus/repository/att-public-group' 
    }    
	maven { 
		credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
        url 'http://mavencentral.it.att.com:8081/nexus/repository/att-repository-snapshots' 
    }
//	maven { 
//		credentials {
//           username "$mavenUser"
//           password "$mavenPassword"
//        }
//        url 'http://mavencentral.it.att.com:8081/nexus/repository/swm-releases' 
//    }
	maven { 
		credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
        url 'http://mavencentral.it.att.com:8081/nexus/repository/atlassian' 
    }
	maven { 
		credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
        url 'http://mavencentral.it.att.com:8081/nexus/repository/2020SAPC' 
    }
}

sourceSets {
	main {
		output.classesDir = 'build/classes'
		java {
			srcDir 'src/main/java/'
		}
		resources {
            srcDir 'src/main/resources'
        }
	}
}

jar {
	destinationDir = file('./target/lib')
}

test {
ignoreFailures true
}

jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
    }
}

check.dependsOn jacocoTestReport
