#  ============LICENSE_START=======================================================
#    org.onap.dcae
#    ================================================================================
#    Copyright (c) 2019-2020 AT&T Intellectual Property. All rights reserved.
#    ================================================================================
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#    ============LICENSE_END=========================================================
#
#description: Hello World mS for subscribing the data from local DMaaP, DR or MR, processing them and publishing them as PM files to local DMaaP DR
#blueprint_version: 1.0.1
---
tosca_definitions_version: cloudify_dsl_1_3
imports:
- https://www.getcloudify.org/spec/cloudify/4.5.5/types.yaml
- https://nexus.onap.org/service/local/repositories/raw/content/org.onap.dcaegen2.platform.plugins/R6/k8splugin/1.7.1/k8splugin_types.yaml
- https://nexus.onap.org/service/local/repositories/raw/content/org.onap.ccsdk.platform.plugins/type_files/dmaap/dmaap.yaml
inputs:
  DCAE-HELLO-WORLD-PUB-DR_delivery_url:
    type: string
  DCAE-HELLO-WORLD-PUB-DR_location:
    type: string
  DCAE-HELLO-WORLD-PUB-DR_password:
    type: string
  DCAE-HELLO-WORLD-PUB-DR_subscriber_id:
    type: string
  DCAE-HELLO-WORLD-PUB-DR_username:
    type: string
  DCAE-HELLO-WORLD-SUB-DR_delivery_url:
    type: string
  DCAE-HELLO-WORLD-SUB-DR_location:
    type: string
  DCAE-HELLO-WORLD-SUB-DR_password:
    type: string
  DCAE-HELLO-WORLD-SUB-DR_subscriber_id:
    type: string
  DCAE-HELLO-WORLD-SUB-DR_username:
    type: string
  DCAE_HELLO_WORLD_PUB_MR_publish_url:
    type: string
  DCAE_HELLO_WORLD_SUB_MR_subscribe_url:
    type: string
  always_pull_image:
    type: boolean
    description: Set to true if the image should always be pulled
    default: true
  dcae.collectors.vcc.helloworld.pm_cpu_limit:
    type: string
    default: "250m"
  dcae.collectors.vcc.helloworld.pm_cpu_request:
    type: string
    default: "250m"
  dcae.collectors.vcc.helloworld.pm_memory_limit:
    type: string
    default: "128Mi"
  dcae.collectors.vcc.helloworld.pm_memory_request:
    type: string
    default: "128Mi"
  dcaes_database_name:
    type: string
    description: db name
    default: ""
  dcaes_database_writerfqdn:
    type: string
    description: db writerfqdn
    default: ""
  dti_database_name:
    type: string
    description: db name
    default: ""
  dti_database_writerfqdn:
    type: string
    description: db writerfqdn
    default: ""
  envs:
    default: &envs {}
  image:
    type: string
    default: "nexus3.onap.org:10001/onap/org.onap.dcaegen2.collectors.ves.vescollector:latest"
  location_id:
    type: string
    default: ""
  replicas:
    type: integer
    description: number of instances
    default: 1
  repo_database_name:
    type: string
    description: db name
    default: ""
  repo_database_writerfqdn:
    type: string
    description: db writerfqdn
    default: ""
  service_component_name_override:
    type: string
    default: ""
  tca_policy_00_policy_id:
    type: string
    description: policy_id
    default: ""
  tca_policy_11_policy_id:
    type: string
    description: policy_id
    default: "tca_policy_id_11"
  use_tls:
    type: boolean
    description: flag to indicate tls enable/disable
    default: true
  vcc_hello_name:
    type: string
    default: "fsdfa"
node_templates:
  dcae.collectors.vcc.helloworld.pm:
    type: dcae.nodes.ContainerizedPlatformComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            ports: []
            envs:
              <<: *envs
              DCAES_DB_NAME:
                get_input: dcaes_database_name
              DCAES_DB_ADMIN_HOST:
                get_attribute:
                - dcaes_pgaasdb
                - admin
                - host
              DCAES_DB_ADMIN_USER:
                get_attribute:
                - dcaes_pgaasdb
                - admin
                - user
              DCAES_DB_ADMIN_PASS:
                get_attribute:
                - dcaes_pgaasdb
                - admin
                - password
              DTI_DB_NAME:
                get_input: dti_database_name
              DTI_DB_ADMIN_HOST:
                get_attribute:
                - dti_pgaasdb
                - admin
                - host
              DTI_DB_ADMIN_USER:
                get_attribute:
                - dti_pgaasdb
                - admin
                - user
              DTI_DB_ADMIN_PASS:
                get_attribute:
                - dti_pgaasdb
                - admin
                - password
              REPO_DB_NAME:
                get_input: repo_database_name
              REPO_DB_ADMIN_HOST:
                get_attribute:
                - repo_pgaasdb
                - admin
                - host
              REPO_DB_ADMIN_USER:
                get_attribute:
                - repo_pgaasdb
                - admin
                - user
              REPO_DB_ADMIN_PASS:
                get_attribute:
                - repo_pgaasdb
                - admin
                - password
    properties:
      application_config:
        service_calls: []
        streams_publishes:
          DCAE-HELLO-WORLD-PUB-DR:
            dmaap_info:
              username:
                get_input: DCAE-HELLO-WORLD-PUB-DR_username
              password:
                get_input: DCAE-HELLO-WORLD-PUB-DR_password
              location:
                get_input: DCAE-HELLO-WORLD-PUB-DR_location
              delivery_url:
                get_input: DCAE-HELLO-WORLD-PUB-DR_delivery_url
              subscriber_id:
                get_input: DCAE-HELLO-WORLD-PUB-DR_subscriber_id
            type: data_router
          DCAE-HELLO-WORLD-PUB-MR:
            dmaap_info:
              topic_url:
                get_input: DCAE_HELLO_WORLD_PUB_MR_publish_url
            type: message_router
        streams_subscribes:
          DCAE-HELLO-WORLD-SUB-DR:
            dmaap_info:
              username:
                get_input: DCAE-HELLO-WORLD-SUB-DR_username
              password:
                get_input: DCAE-HELLO-WORLD-SUB-DR_password
              location:
                get_input: DCAE-HELLO-WORLD-SUB-DR_location
              delivery_url:
                get_input: DCAE-HELLO-WORLD-SUB-DR_delivery_url
              subscriber_id:
                get_input: DCAE-HELLO-WORLD-SUB-DR_subscriber_id
            type: data_router
          DCAE-HELLO-WORLD-SUB-MR:
            dmaap_info:
              topic_url:
                get_input: DCAE_HELLO_WORLD_SUB_MR_subscribe_url
            type: message_router
        isSelfServeComponent: false
        service_component_name_override:
          get_input: service_component_name_override
        useDtiConfig: false
        vcc_hello_name:
          get_input: vcc_hello_name
      docker_config:
        healthcheck:
          interval: 60s
          timeout: 20s
          script: /opt/app/vcc/bin/common/HealthCheck_HelloWorld.sh
          type: docker
        volumes:
        - container:
            bind: /opt/app/dcae-certificate
          host:
            path: /opt/app/dcae-certificate
        - container:
            bind: /opt/logs/DCAE/dmd/AGENT
          host:
            path: /opt/logs/DCAE/helloworldpm/dmd/AGENT
        - container:
            bind: /opt/logs/DCAE/dmd/WATCHER
          host:
            path: /opt/logs/DCAE/helloworldpm/dmd/WATCHER
        - container:
            bind: /opt/app/vcc/logs/DCAE
          host:
            path: /opt/logs/DCAE/helloworldpm/vcc-logs
        - container:
            bind: /opt/app/vcc/archive/data
          host:
            path: /opt/data/DCAE/helloworldpm/vcc-archive
      image:
        get_input: image
      location_id:
        get_input: location_id
      log_info:
        log_directory: /opt/app/VESCollector/logs/ecomp
      dns_name: dcae.collectors.vcc.helloworld.pm
      replicas:
        get_input: replicas
      name: dcae.collectors.vcc.helloworld.pm
      tls_info:
        cert_directory: /opt/app/dh/etc/cert
        use_tls:
          get_input: use_tls
      resource_config:
        limits:
          cpu:
            get_input: dcae.collectors.vcc.helloworld.pm_cpu_limit
          memory:
            get_input: dcae.collectors.vcc.helloworld.pm_memory_limit
        requests:
          cpu:
            get_input: dcae.collectors.vcc.helloworld.pm_cpu_request
          memory:
            get_input: dcae.collectors.vcc.helloworld.pm_memory_request
      always_pull_image:
        get_input: always_pull_image
    relationships:
    - type: cloudify.relationships.depends_on
      target: tca_policy_00
    - type: cloudify.relationships.depends_on
      target: tca_policy_11
    - type: cloudify.relationships.depends_on
      target: dcaes_pgaasdb
    - type: cloudify.relationships.depends_on
      target: dti_pgaasdb
    - type: cloudify.relationships.depends_on
      target: repo_pgaasdb
  dcaes_pgaasdb:
    type: dcae.nodes.pgaas.database
    properties:
      writerfqdn:
        get_input: dcaes_database_writerfqdn
      name:
        get_input: dcaes_database_name
      use_existing: true
  dti_pgaasdb:
    type: dcae.nodes.pgaas.database
    properties:
      writerfqdn:
        get_input: dti_database_writerfqdn
      name:
        get_input: dti_database_name
      use_existing: true
  repo_pgaasdb:
    type: dcae.nodes.pgaas.database
    properties:
      writerfqdn:
        get_input: repo_database_writerfqdn
      name:
        get_input: repo_database_name
      use_existing: true
  tca_policy_00:
    type: clamp.nodes.policy
    properties:
      policy_id:
        get_input: tca_policy_00_policy_id
      policy_model_id: onap.policies.monitoring.cdap.tca.hi.lo.app
  tca_policy_11:
    type: clamp.nodes.policy
    properties:
      policy_id:
        get_input: tca_policy_11_policy_id
      policy_model_id: onap.policies.monitoring.cdap.tca.hi.lo.app